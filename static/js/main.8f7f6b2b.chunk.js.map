{"version":3,"sources":["logo.svg","components/header.jsx","helpers/helper.js","components/createTodo.jsx","components/deleteModal.jsx","components/todoItem.jsx","components/footer.jsx","components/socialMedia.jsx","store/actionConstants.js","App.jsx","serviceWorker.js","store/reducer.js","index.js"],"names":["module","exports","className","src","logo","alt","helper","getIconForCompletion","status","filterTodos","todoList","filter","filteredTodos","elem","completionStatus","map","getPunctuation","count","CreateTodo","state","this","props","updateAllToggle","isSelectAll","disabled","length","onClick","icon","size","type","placeholder","onKeyUp","e","keyCode","onAdd","id","parseInt","Math","random","text","target","value","isEditing","Component","DeleteModal","isDeleteModalOpen","handleDelete","Fragment","Modal","show","centered","backdrop","onHide","Header","closeButton","Title","Body","Footer","Button","variant","TodoItem","inputRef","React","createRef","prevProps","prevState","todo","current","focus","onUpdate","hidden","style","textDecoration","height","ref","onChange","handleKeyDown","onBlur","marginBottom","paddingLeft","setState","bind","confimation","onDelete","onClear","completedCount","textAlign","padding","to","exact","activeStyle","color","SocialMedia","marginTop","paddingRight","href","rel","App","updateTodo","deleteTodo","addTodo","clearTodo","allTodos","key","withRouter","connect","match","params","dispatch","payload","actionConstants","Boolean","window","location","hostname","initialState","store","createStore","newState","todoIndex","findIndex","library","add","faCircle","faCheckCircle","faTimesCircle","faEdit","faTrashAlt","faTwitter","faLinkedinIn","ReactDOM","render","path","strict","component","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.8f7f6b2b.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React from 'react';\nimport logo from './../logo.svg';\nimport './../styles/header.css';\n\nexport default () => {\n    return (<div className=\"app-header\">\n        <img className=\"App-logo\" src={logo} alt=\"react-logo \"></img>\n        <h4>React Todo</h4>\n    </div>);\n}\n","function getIconForCompletion(status) {\n    return status ? ['fas', 'check-circle'] : ['fas', 'circle']\n}\n\nfunction filterTodos(todoList, filter) {\n    let filteredTodos;\n    switch (filter) {\n        case 'active': {\n            filteredTodos = todoList.filter(elem => !elem.completionStatus);\n            break;\n        }\n        case 'completed': {\n            filteredTodos = todoList.filter(elem => elem.completionStatus);\n            break;\n        }\n        default: {\n            filteredTodos = todoList.map(elem => elem);\n            break;\n        }\n    }\n    return filteredTodos;\n}\n\nfunction getPunctuation(count) {\n    return count > 1 ? 'items' : 'item';\n}\n\nexport const helper = {\n    getIconForCompletion,\n    filterTodos,\n    getPunctuation\n}","import React, { Component } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\n\nimport { helper } from '../helpers/helper';\n\nclass CreateTodo extends Component {\n    state = {}\n    render() {\n        const { updateAllToggle, isSelectAll, todoList } = this.props;\n        return (\n            <div className=\"todo new-todo\">\n                <button className=\"btn btn-light btn-sm icon-btn\"\n                    disabled={todoList.length ? false : true}\n                    onClick={() => updateAllToggle(!isSelectAll)}>\n                    <FontAwesomeIcon icon={helper.getIconForCompletion(isSelectAll)} size=\"2x\" />\n                </button>\n                <input type=\"text\" className=\"form-control todo-text\"\n                    placeholder=\"What needs to be done?\" onKeyUp={(e) => this.onKeyUp(e)} />\n            </div>\n        );\n    }\n\n    onKeyUp(e) {\n        if (e.keyCode === 13) {\n            this.props.onAdd({\n                id: parseInt(Math.random() * 100000),\n                text: e.target.value,\n                isEditing: false,\n                completionStatus: false\n            })\n            e.target.value = '';\n        }\n    }\n}\n\nexport default CreateTodo;","import React from 'react';\nimport { Modal, Button } from 'react-bootstrap';\n\nconst DeleteModal = ({ isDeleteModalOpen, handleDelete }) => {\n    return (\n        <React.Fragment>\n            <Modal show={isDeleteModalOpen} centered backdrop={'static'} size=\"sm\" onHide={() => handleDelete(false)}>\n                <Modal.Header closeButton>\n                    <Modal.Title>Delete</Modal.Title>\n                </Modal.Header>\n\n                <Modal.Body>\n                    <p>Do you want to delete</p>\n                </Modal.Body>\n\n                <Modal.Footer>\n                    <Button className=\"btn-sm\" onClick={() => handleDelete(false)} variant=\"secondary\">Close</Button>\n                    <Button className=\"btn-sm\" onClick={() => handleDelete(true)} variant=\"danger\">Delete</Button>\n                </Modal.Footer>\n            </Modal>\n        </React.Fragment>\n    );\n}\n\nexport default DeleteModal;","import React, { Component } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\n\nimport { helper } from '../helpers/helper';\nimport './../styles/todoItem.css'\nimport DeleteModal from './deleteModal';\n\nclass TodoItem extends Component {\n\n    state = {\n        isDeleteModalOpen: false\n    }\n\n    constructor(props) {\n        super(props);\n        this.inputRef = React.createRef();\n    }\n\n    componentDidUpdate(prevProps, prevState) {\n        if (!prevProps.todo.isEditing && this.props.todo.isEditing) {\n            this.inputRef.current.focus();\n        }\n    }\n\n    render() {\n        const { todo, onUpdate } = this.props;\n        return (<div className=\"todo todo-list\">\n            <button disabled={todo.isEditing} className=\"btn btn-light btn-sm icon-btn\" onClick={() => onUpdate({ ...todo, completionStatus: !todo.completionStatus })}>\n                <FontAwesomeIcon icon={helper.getIconForCompletion(todo.completionStatus)} size=\"2x\" />\n            </button>\n            <label hidden={todo.isEditing}\n                style={{ textDecoration: todo.completionStatus ? 'line-through' : 'none', height: 'auto' }}\n                className=\"form-control todo-text\">\n                {todo.text}\n            </label>\n            <input type=\"text\"\n                ref={this.inputRef}\n                hidden={!todo.isEditing}\n                onChange={(e) => onUpdate({ ...todo, text: e.target.value })}\n                onKeyUp={(e) => this.handleKeyDown(e)}\n                onBlur={(e) => onUpdate({ ...todo, text: e.target.value, isEditing: false })}\n                style={{ textDecoration: todo.completionStatus ? 'line-through' : 'none', marginBottom: 8 }}\n                className=\"form-control todo-text\"\n                placeholder=\"What needs to be done?\"\n                value={todo.text} />\n            <button onClick={() => this.props.onUpdate({ ...this.props.todo, isEditing: true })}\n                disabled={todo.completionStatus}\n                className=\"btn btn-light btn-sm icon-btn\"\n                style={{ paddingLeft: 10 }}>\n                <FontAwesomeIcon icon={['fas', 'edit']} size=\"2x\" />\n            </button>\n            <button onClick={() => this.setState({ isDeleteModalOpen: true })} className=\"btn btn-light btn-sm icon-btn\">\n                <FontAwesomeIcon icon={['fas', 'trash-alt']} size=\"2x\" />\n            </button>\n            <DeleteModal isDeleteModalOpen={this.state.isDeleteModalOpen} handleDelete={this.handleDelete.bind(this)}></DeleteModal>\n        </div>);\n    }\n\n    handleKeyDown(e) {\n        if (e.keyCode === 13) {\n            this.props.onUpdate({ ...this.props.todo, isEditing: false });\n        }\n    }\n\n    handleDelete(confimation) {\n        this.setState({ isDeleteModalOpen: false });\n        if (confimation) {\n            this.props.onDelete(this.props.todo);\n        }\n    }\n\n}\n\nexport default TodoItem;","import React, { Component } from 'react';\nimport { NavLink } from 'react-router-dom';\nimport '../styles/footer.css';\nimport { helper } from './../helpers/helper';\n\nclass Footer extends Component {\n    state = {}\n    render() {\n        const { count, onClear, completedCount } = this.props;\n        return (<div className=\"todo footer-container\">\n            <div className=\"form-control todo-text footer\">\n                <div className=\"col-3\" style={{ textAlign: 'left', padding: 0 }}>\n                    <span>\n                        {count} {helper.getPunctuation(count)} left\n                    </span>\n                </div>\n                <div className=\"col-7\" style={{ padding: 0 }}>\n                    <NavLink to=\"/all\" exact activeStyle={{ color: \"red\" }} className=\"btn icon-btn\">All</NavLink>\n                    <NavLink to=\"/active\" exact activeStyle={{ color: \"red\" }} className=\"btn icon-btn\">Active</NavLink>\n                    <NavLink to=\"/completed\" exact activeStyle={{ color: \"red\" }} className=\"btn icon-btn\">Completed</NavLink>\n                </div>\n                <div className=\"col-2\" style={{ textAlign: 'right', padding: 0 }}>\n                    <button disabled={!completedCount} className=\"btn icon-btn\" onClick={() => onClear()}>Clear</button>\n                </div>\n            </div>\n        </div>);\n    }\n}\n\nexport default Footer;","import React from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\n\nconst SocialMedia = () => {\n    return (\n        <div style={{ marginTop: 10 }}>\n            <span style={{ paddingRight: 10 }}>\n                <a href=\"https://www.linkedin.com/in/kannan-balasubramanian-93376a28/\" style={{ color: 'black' }} target=\"_blank\" rel=\"noopener noreferrer\">\n                    <FontAwesomeIcon icon={['fab', 'linkedin-in']} size=\"2x\" />\n                </a>\n            </span>\n            <span>\n                <a href=\"https://twitter.com/rbkannan1\" style={{ color: 'black' }} target=\"_blank\" rel=\"noopener noreferrer\">\n                    <FontAwesomeIcon icon={['fab', 'twitter']} size=\"2x\" />\n                </a>\n            </span>\n        </div>\n    );\n}\n\nexport default SocialMedia;","export default {\n    ADD_TODO: 'ADD_TODO',\n    UPDATE_TODO: 'UPDATE_TODO',\n    DELETE_TODO: 'DELETE_TODO',\n    UPDATE_ALL_TOGGLE: 'UPDATE_TOGGLE',\n    CLEAR: 'CLEAR'\n}","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\n\nimport Header from './components/header';\nimport CreateTodo from './components/createTodo';\nimport TodoItem from './components/todoItem';\nimport Footer from './components/footer';\nimport SocialMedia from './components/socialMedia';\nimport { helper } from './helpers/helper';\n\nimport './App.css';\nimport actionConstants from './store/actionConstants';\n\nclass App extends Component {\n\n  render() {\n    const { updateAllToggle, isSelectAll, todoList, updateTodo, deleteTodo, addTodo, clearTodo, allTodos } = this.props\n    return (\n      <div className=\"App\">\n        <Header />\n        <CreateTodo todoList={todoList}\n          updateAllToggle={updateAllToggle}\n          isSelectAll={isSelectAll}\n          onAdd={addTodo} />\n        {allTodos.length ?\n          <React.Fragment>\n            <React.Fragment>\n              {todoList.map(elem => {\n                return (\n                  <TodoItem key={elem.id}\n                    onUpdate={updateTodo}\n                    todo={elem}\n                    onDelete={deleteTodo}>\n                  </TodoItem>\n                )\n              })}\n            </React.Fragment>\n            <Footer count={allTodos.filter(elem => !elem.completionStatus).length}\n              onClear={clearTodo}\n              completedCount={todoList.filter(elem => elem.completionStatus).length} />\n          </React.Fragment> : <div />\n        }\n        <SocialMedia />\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state, { match }) => {\n  return {\n    isSelectAll: state.isSelectAll,\n    todoList: helper.filterTodos(state.todoList, match.params.status),\n    allTodos: state.todoList\n  };\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    addTodo: payload => {\n      dispatch({ type: actionConstants.ADD_TODO, payload });\n    },\n    updateTodo: payload => {\n      dispatch({ type: actionConstants.UPDATE_TODO, payload });\n    },\n    updateAllToggle: payload => {\n      dispatch({ type: actionConstants.UPDATE_ALL_TOGGLE, payload });\n    },\n    deleteTodo: payload => {\n      dispatch({ type: actionConstants.DELETE_TODO, payload });\n    },\n    clearTodo: () => {\n      dispatch({ type: actionConstants.CLEAR });\n    }\n  }\n}\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(App));\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import actionConstants from './actionConstants';\n\nconst initialState = {\n    todoList: [\n    ],\n    isSelectAll: false\n}\n\nexport default (state = initialState, { type, payload }) => {\n    let newState = { ...state };\n    switch (type) {\n        case actionConstants.ADD_TODO: {\n            const todoList = [...newState.todoList, payload];\n            newState.todoList = todoList;\n            break;\n        }\n        case actionConstants.UPDATE_TODO: {\n            const todoList = [...newState.todoList];\n            const todoIndex = todoList.findIndex(elem => elem.id === payload.id);\n            const todo = { ...todoList[todoIndex] };\n            todo.text = payload.text;\n            todo.completionStatus = payload.completionStatus;\n            todo.isEditing = payload.isEditing;\n            todoList[todoIndex] = todo;\n            newState.todoList = todoList;\n            break;\n        }\n        case actionConstants.UPDATE_ALL_TOGGLE: {\n            const todoList = [...newState.todoList];\n            newState.todoList = todoList.map(elem => { elem.completionStatus = payload; return elem });\n            newState.isSelectAll = payload;\n            break;\n        }\n        case actionConstants.DELETE_TODO: {\n            const todoList = [...newState.todoList];\n            newState.todoList = todoList.filter(elem => elem.id !== payload.id);\n            break;\n        }\n        case actionConstants.CLEAR: {\n            const todoList = [...newState.todoList];\n            newState.todoList = todoList.filter(elem => !elem.completionStatus);\n            break;\n        }\n        default: {\n            break;\n        }\n    }\n    return newState;\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport { library } from '@fortawesome/fontawesome-svg-core'\nimport { faCheckCircle, faCircle, faTimesCircle, faEdit, faTrashAlt } from '@fortawesome/free-solid-svg-icons'\nimport { faTwitter, faLinkedinIn } from '@fortawesome/free-brands-svg-icons';\nimport { createStore } from \"redux\";\nimport { Provider } from 'react-redux';\nimport { BrowserRouter, Route, Redirect } from 'react-router-dom';\n\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport reducer from \"./store/reducer\";\n\n// Initializing 3rd party libs\nconst store = createStore(reducer);\nlibrary.add(faCircle, faCheckCircle, faTimesCircle, faEdit, faTrashAlt, faTwitter, faLinkedinIn);\n\nReactDOM.render(\n    <Provider store={store}>\n        <BrowserRouter>\n            <Route\n                path=\"/:status\"\n                exact\n                strict\n                component={App}\n            ></Route>\n            <Route path='*' exact={true} render={() => <Redirect to=\"/all\" />} />\n        </BrowserRouter>\n    </Provider>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}